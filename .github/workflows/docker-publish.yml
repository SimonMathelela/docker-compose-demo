name: Build and Publish Docker image

on:
  push:
    branches:
      - '**'

jobs:
  build-and-push:
    runs-on: ubuntu-latest

    env:
      DOCKER_IMAGE_NAME: ${{ vars.DOCKER_IMAGE_NAME }}
      DOCKER_IMAGE_TAG: ${{ github.sha }}

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      # Uncomment and adjust the following if you want to run Go tests/builds
      # - name: Set up Go
      #   uses: actions/setup-go@v5
      #   with:
      #     go-version: ${{ vars.GO_VERSION }}
      #
      # - name: Install dependencies
      #   run: go mod download
      #   working-directory: ./src
      #
      # - name: Run tests
      #   run: go test -v ./...
      #   working-directory: ./src
      #
      # - name: Upload test results
      #   if: always()
      #   uses: actions/upload-artifact@v4
      #   with:
      #     name: go-test-results
      #     path: src

      - name: Set up Docker Buildx
        run: |
          docker buildx create --use --name mybuilder || docker buildx use mybuilder

      - name: Log in to Docker Hub
        run: echo ${{ secrets.DOCKERHUB_TOKEN }} | docker login -u ${{ secrets.DOCKERHUB_USERNAME }} --password-stdin

      - name: Build and push Docker image
        run: |
          docker buildx build --platform linux/amd64,linux/arm64 \
            --push \
            -t ${{ env.DOCKER_IMAGE_NAME }}:latest \
            -t ${{ env.DOCKER_IMAGE_NAME }}:${{ env.DOCKER_IMAGE_TAG }} \
            .

      - name: Scan Docker image for vulnerabilities
        id: trivy_scan
        run: |
          docker run --rm -v /var/run/docker.sock:/var/run/docker.sock aquasec/trivy:latest image --severity HIGH,CRITICAL --exit-code 1 --format table ${{ secrets.ACR_LOGIN_SERVER }}/${{ steps.extract_properties.outputs.artifact_id }}:${{ steps.retrieve_version.outputs.version }}

      - name: Check for vulnerabilities
        if: failure()
        run: |
          echo "High or critical severity vulnerabilities found. Failing the pipeline."
          exit 1
